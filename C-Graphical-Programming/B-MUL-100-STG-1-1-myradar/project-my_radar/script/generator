#!/usr/bin/env python3
##
## EPITECH PROJECT, 2023
## B-MUL-100-STG-1-1-myradar-raphael.petrequin
## File description:
## generator
##

import sys, os
from random import randint

LENGHT_WINDOW = 1920
WIDTH_WINDOW = 1080
MAX_SPEED = 5
MAX_DELAY = 20
MAX_RADIUS = 10

#_____FUNCTION USED__________________________________________________________

def make_file(nb_planes, nb_towers):
    map_folder = "maps"
    if not os.path.exists(map_folder):
        os.makedirs(map_folder)

    file_path = os.path.join(map_folder, f"{nb_planes}_planes_{nb_towers}_towers.rdr")
    with open(file_path, 'w') as file:

        while (nb_planes):
            file.write(f"{randint(1, LENGHT_WINDOW)} {randint(1, WIDTH_WINDOW)} {randint(1, LENGHT_WINDOW - 60)} {randint(40, WIDTH_WINDOW - 90)} {randint(1, MAX_SPEED)} {randint(1, MAX_DELAY)}\n")
            nb_planes -= 1
        file.write("\n")

        while (nb_towers):
            if (nb_towers - 1 != 0):
                file.write(f"{randint(1, LENGHT_WINDOW - 70)} {randint(50, WIDTH_WINDOW - 100)} {randint(5, MAX_RADIUS)}\n")
            else:
                file.write(f"{randint(1, LENGHT_WINDOW - 70)} {randint(50, WIDTH_WINDOW - 100)} {randint(5, MAX_RADIUS)}")
            nb_towers -= 1

#_____USAGE__________________________________________________________________

if len(sys.argv) == 2 and sys.argv[1] == "-h":
    print("USAGE", sep="")
    print(" ./generator [nb_planes] [nb_towers]\n", sep="")
    print("OPTION", sep="")
    print(" -h  -->  show usage and exit", sep="")
    sys.exit(1)

#_____HANDLING ERRORS________________________________________________________

# too few arguments
if len(sys.argv) < 3:
    print("Too few arguments: make \"./generator -h\" to now more", sep="", file=sys.stderr)
    exit(84)
# too much arguments
if len(sys.argv) > 3:
    print("Too much arguments: make \"./generator -h\" to now more", sep="", file=sys.stderr)
    sys.exit(84)
# is not integers
try:
    int(sys.argv[1])
    int(sys.argv[2])
except ValueError:
    print("[nb_planes] and [nb_towers] must be integers:", sep="", file=sys.stderr)
    print("make \"./generator -h\" to now more", sep="", file=sys.stderr)
    sys.exit(84)

#_____RUN ALGORITHM__________________________________________________________

if __name__ == '__main__':
    make_file(int(sys.argv[1]), int(sys.argv[2]))
